version: "3.9"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeepr
    ports:
      - "2181:2181"
    networks:
      - kafka_net
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    restart: on-failure
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - kafka_net
    
  db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Password123"
      ACCEPT_EULA: "Y"
    networks:
      - kafka_net
    
  
 # producer:
 #   build:
 #     context: ./
 #     dockerfile: Producer.Dockerfile
 #   networks:
 #    - kafka_net
 #   depends_on:
 #     - kafka
 #   deploy:
 #    replicas: 5
  
  #consumer:
  #  build:
  #    context: ./
  #    dockerfile: Consumer.Dockerfile
  #  networks:
  #    - kafka_net
  #  depends_on:
  #    - kafka
  #  deploy:
  #    replicas: 5

  kubemq: 
    image: kubemq/kubemq
    networks:
      - kafka_net
    ports: 
      - 8080:8080
      - 50000:50000
      - 9090:9090
    environment:
      KUBEMQ_TOKEN: "ABC1234"
    volumes:
      - kubemq


networks:
  kafka_net:
    driver: "bridge"
volumes:
  kubemq: